{"ast":null,"code":"var _s = $RefreshSig$();\n// import { useEffect } from \"react\"\n// import { useDispatch, useSelector } from \"react-redux\"\n// import { setMessages } from \"../redux/messageSlice\"\n\n// const useGetRealTimeMessage= async()=>{\n//     console.log(\"useGetRealTimeMessage gets hitttt\")\n//     const{socket}=useSelector(store=>store.socket)\n//     console.log(\"socket\",socket)\n\n//     const{messages}=useSelector(store=>store.message)\n//     console.log(\"messages\",messages)\n\n//     const dispatch=useDispatch()\n//    useEffect(()=>{\n//      socket?.on(\"newMessage\",(newMessage)=>{\n//         console.log(\"newMessageeeeeeee\",newMessage)\n\n//      dispatch(setMessages([...messages,newMessage]))\n//      })\n//    },[socket,setMessages,messages])\n// }\n// export default useGetRealTimeMessage\n\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setMessages } from \"../redux/messageSlice\";\nconst useGetRealTimeMessage = () => {\n  _s();\n  const {\n    socket\n  } = useSelector(store => store.socket);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (socket) {\n      const handleNewMessage = newMessage => {\n        dispatch(setMessages(prevMessages => [...prevMessages, newMessage]));\n      };\n      socket.on(\"newMessage\", handleNewMessage);\n\n      // Cleanup to avoid memory leaks\n      return () => {\n        socket.off(\"newMessage\", handleNewMessage);\n      };\n    }\n  }, [socket, dispatch]);\n};\n_s(useGetRealTimeMessage, \"zXFfd9j2Cp66oSgRplAgup8Wf6s=\", false, function () {\n  return [useSelector, useDispatch];\n});\nexport default useGetRealTimeMessage;","map":{"version":3,"names":["useEffect","useDispatch","useSelector","setMessages","useGetRealTimeMessage","_s","socket","store","dispatch","handleNewMessage","newMessage","prevMessages","on","off"],"sources":["C:/Users/hardik/OneDrive/Desktop/LiveChatApplication/frontend/src/Hooks/useRealTimeMessages.js"],"sourcesContent":["// import { useEffect } from \"react\"\r\n// import { useDispatch, useSelector } from \"react-redux\"\r\n// import { setMessages } from \"../redux/messageSlice\"\r\n\r\n// const useGetRealTimeMessage= async()=>{\r\n//     console.log(\"useGetRealTimeMessage gets hitttt\")\r\n//     const{socket}=useSelector(store=>store.socket)\r\n//     console.log(\"socket\",socket)\r\n\r\n//     const{messages}=useSelector(store=>store.message)\r\n//     console.log(\"messages\",messages)\r\n\r\n//     const dispatch=useDispatch()\r\n//    useEffect(()=>{\r\n//      socket?.on(\"newMessage\",(newMessage)=>{\r\n//         console.log(\"newMessageeeeeeee\",newMessage)\r\n\r\n//      dispatch(setMessages([...messages,newMessage]))\r\n//      })\r\n//    },[socket,setMessages,messages])\r\n// }\r\n// export default useGetRealTimeMessage\r\n\r\n\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setMessages } from \"../redux/messageSlice\";\r\n\r\nconst useGetRealTimeMessage = () => {\r\n  const { socket } = useSelector(store => store.socket);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      const handleNewMessage = (newMessage) => {\r\n        dispatch(setMessages(prevMessages => [...prevMessages, newMessage]));\r\n      };\r\n\r\n      socket.on(\"newMessage\", handleNewMessage);\r\n\r\n      // Cleanup to avoid memory leaks\r\n      return () => {\r\n        socket.off(\"newMessage\", handleNewMessage);\r\n      };\r\n    }\r\n  }, [socket, dispatch]);\r\n};\r\n\r\nexport default useGetRealTimeMessage;\r\n"],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,QAAQ,uBAAuB;AAEnD,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM;IAAEC;EAAO,CAAC,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACD,MAAM,CAAC;EACrD,MAAME,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,IAAIM,MAAM,EAAE;MACV,MAAMG,gBAAgB,GAAIC,UAAU,IAAK;QACvCF,QAAQ,CAACL,WAAW,CAACQ,YAAY,IAAI,CAAC,GAAGA,YAAY,EAAED,UAAU,CAAC,CAAC,CAAC;MACtE,CAAC;MAEDJ,MAAM,CAACM,EAAE,CAAC,YAAY,EAAEH,gBAAgB,CAAC;;MAEzC;MACA,OAAO,MAAM;QACXH,MAAM,CAACO,GAAG,CAAC,YAAY,EAAEJ,gBAAgB,CAAC;MAC5C,CAAC;IACH;EACF,CAAC,EAAE,CAACH,MAAM,EAAEE,QAAQ,CAAC,CAAC;AACxB,CAAC;AAACH,EAAA,CAlBID,qBAAqB;EAAA,QACNF,WAAW,EACbD,WAAW;AAAA;AAkB9B,eAAeG,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}