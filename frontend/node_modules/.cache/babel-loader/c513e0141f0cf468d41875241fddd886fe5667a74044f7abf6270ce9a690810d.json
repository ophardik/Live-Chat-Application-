{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hardik\\\\OneDrive\\\\Desktop\\\\LiveChatApplication\\\\frontend\\\\src\\\\App.js\",\n  _s2 = $RefreshSig$();\n// // import './App.css';\n// // import './index.css';\n// // import { BrowserRouter, Routes, Route } from 'react-router-dom';\n// // import Signup from './Components/Signup';\n// // import Login from './Components/Login';\n// // import Home from './Components/Home';\n// // import { useDispatch, useSelector } from 'react-redux';\n// // import { useEffect, useState } from 'react';\n// // import { io } from \"socket.io-client\";\n// // import { setSocket } from './redux/socketSlice';\n// // import { setOnlineUsers } from './redux/userSlice';\n\n// // function App() {\n// //   const { authUser } = useSelector(store => store.user);\n// //   const dispatch=useDispatch()\n\n// //   useEffect(() => {\n// //     if (authUser) {\n// //       const socket = io('http://localhost:8005', {\n// //         query:{\n// //           userId:authUser._id\n// //         }\n// //         // transports: ['websocket'],\n// //         // withCredentials: true\n// //       });\n// //      dispatch(setSocket(socket)) \n// //      socket.on('getOnlineUsers',(onlineUsers)=>{\n// //       dispatch(setOnlineUsers(onlineUsers))\n// //       console.log(dispatch(setOnlineUsers(onlineUsers)))\n// //      })\n\n// //       // Handle socket events if needed\n// //       socket.on('connect', () => {\n// //         console.log('Connected to server');\n// //       });\n\n// //       return () => {\n// //         socket.disconnect();\n// //       };\n// //     }\n// //   }, [authUser]);\n\n// //   return (\n// //     <BrowserRouter>  \n// //       <div className='p-4 h-screen flex items-center justify-center'>\n// //         <img src=\"/bg4.jpeg\" alt=\"Background\" className=\"background-image\" />\n// //         <Routes>\n// //           <Route path=\"/\" element={<Signup />} />\n// //           <Route path=\"/login\" element={<Login />} />\n// //           <Route path=\"/home\" element={<Home />} />\n// //         </Routes>\n// //       </div>\n// //     </BrowserRouter>\n// //   );\n// // }\n\n// // export default App;\n\n// import './App.css';\n// import './index.css';\n// import { BrowserRouter, Routes, Route } from 'react-router-dom';\n// import Signup from './Components/Signup';\n// import Login from './Components/Login';\n// import Home from './Components/Home';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { useEffect, useState } from 'react';\n// import { io } from \"socket.io-client\";\n// import {setSocket} from './redux/socketSlice'\n// import { setOnlineUsers } from './redux/userSlice';\n\n// function App() {\n//   //const [socket, setSocket] = useState(null);\n//   const { authUser } = useSelector(store => store.user);\n//   const { socket } = useSelector(store => store.socket);\n//   const dispatch = useDispatch();\n\n//   useEffect(() => {\n//     if (authUser) {\n//       // Initialize Socket.IO connection\n//       const socketInstance = io('http://localhost:8005', {\n//         query: {\n//           userId: authUser._id\n//         },\n//         // transports: ['websocket'], // Optional, uncomment if needed\n//         // withCredentials: true // Optional, uncomment if needed\n//       });\n\n//       setSocket(socketInstance);\n\n//       // Listen for online users event\n//       socketInstance.on('getOnlineUsers', (onlineUsers) => {\n//         dispatch(setOnlineUsers(onlineUsers));\n//         console.log(\"onlineUsers\",onlineUsers)\n//       });\n\n//       // Handle socket connection\n//       socketInstance.on('connect', () => {\n//         console.log('Connected to server');\n//       });\n\n//       // Cleanup on component unmount\n//       return () => {\n//         socketInstance.disconnect();\n//       };\n//     }else{\n//       if(socket){\n//         socket.close()\n//         dispatch(setSocket(null))\n//       }\n//     }\n//   }, [authUser, dispatch]);\n\n//   return (\n//     <BrowserRouter>\n//       <div className='p-4 h-screen flex items-center justify-center'>\n//         <img src=\"/bg4.jpeg\" alt=\"Background\" className=\"background-image\" />\n//         <Routes>\n//           <Route path=\"/\" element={<Signup />} />\n//           <Route path=\"/login\" element={<Login />} />\n//           <Route path=\"/home\" element={<Home />} />\n//         </Routes>\n//       </div>\n//     </BrowserRouter>\n//   );\n// }\n\n// export default App;\n\nimport './App.css';\nimport './index.css';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport Signup from './Components/Signup';\nimport Login from './Components/Login';\nimport Home from './Components/Home';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { setOnlineUsers } from './redux/userSlice';\nimport { SocketProvider, useSocket } from './Contexts/SocketContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    authUser\n  } = useSelector(store => store.user);\n  const dispatch = useDispatch();\n  _s(useEffect(_s(() => {\n    _s();\n    const socket = useSocket();\n    if (authUser && socket) {\n      socket.on('getOnlineUsers', onlineUsers => {\n        dispatch(setOnlineUsers(onlineUsers));\n      });\n    }\n  }, \"M7tPoqcNtrUaC4IP/ioAcOubdrc=\", false, function () {\n    return [useSocket];\n  }), [authUser, dispatch]), \"M7tPoqcNtrUaC4IP/ioAcOubdrc=\", false, function () {\n    return [useSocket];\n  });\n  return /*#__PURE__*/_jsxDEV(SocketProvider, {\n    authUser: authUser,\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 h-screen flex items-center justify-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/bg4.jpeg\",\n          alt: \"Background\",\n          className: \"background-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/home\",\n            element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"T9imuEFIrHeltt7cap/dokt8iJs=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Routes","Route","Signup","Login","Home","useDispatch","useSelector","useEffect","setOnlineUsers","SocketProvider","useSocket","jsxDEV","_jsxDEV","App","_s2","_s","$RefreshSig$","authUser","store","user","dispatch","socket","on","onlineUsers","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["C:/Users/hardik/OneDrive/Desktop/LiveChatApplication/frontend/src/App.js"],"sourcesContent":["// // import './App.css';\n// // import './index.css';\n// // import { BrowserRouter, Routes, Route } from 'react-router-dom';\n// // import Signup from './Components/Signup';\n// // import Login from './Components/Login';\n// // import Home from './Components/Home';\n// // import { useDispatch, useSelector } from 'react-redux';\n// // import { useEffect, useState } from 'react';\n// // import { io } from \"socket.io-client\";\n// // import { setSocket } from './redux/socketSlice';\n// // import { setOnlineUsers } from './redux/userSlice';\n\n// // function App() {\n// //   const { authUser } = useSelector(store => store.user);\n// //   const dispatch=useDispatch()\n\n// //   useEffect(() => {\n// //     if (authUser) {\n// //       const socket = io('http://localhost:8005', {\n// //         query:{\n// //           userId:authUser._id\n// //         }\n// //         // transports: ['websocket'],\n// //         // withCredentials: true\n// //       });\n// //      dispatch(setSocket(socket)) \n// //      socket.on('getOnlineUsers',(onlineUsers)=>{\n// //       dispatch(setOnlineUsers(onlineUsers))\n// //       console.log(dispatch(setOnlineUsers(onlineUsers)))\n// //      })\n\n// //       // Handle socket events if needed\n// //       socket.on('connect', () => {\n// //         console.log('Connected to server');\n// //       });\n\n// //       return () => {\n// //         socket.disconnect();\n// //       };\n// //     }\n// //   }, [authUser]);\n\n// //   return (\n// //     <BrowserRouter>  \n// //       <div className='p-4 h-screen flex items-center justify-center'>\n// //         <img src=\"/bg4.jpeg\" alt=\"Background\" className=\"background-image\" />\n// //         <Routes>\n// //           <Route path=\"/\" element={<Signup />} />\n// //           <Route path=\"/login\" element={<Login />} />\n// //           <Route path=\"/home\" element={<Home />} />\n// //         </Routes>\n// //       </div>\n// //     </BrowserRouter>\n// //   );\n// // }\n\n// // export default App;\n\n\n   \n\n// import './App.css';\n// import './index.css';\n// import { BrowserRouter, Routes, Route } from 'react-router-dom';\n// import Signup from './Components/Signup';\n// import Login from './Components/Login';\n// import Home from './Components/Home';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { useEffect, useState } from 'react';\n// import { io } from \"socket.io-client\";\n// import {setSocket} from './redux/socketSlice'\n// import { setOnlineUsers } from './redux/userSlice';\n\n// function App() {\n//   //const [socket, setSocket] = useState(null);\n//   const { authUser } = useSelector(store => store.user);\n//   const { socket } = useSelector(store => store.socket);\n//   const dispatch = useDispatch();\n\n//   useEffect(() => {\n//     if (authUser) {\n//       // Initialize Socket.IO connection\n//       const socketInstance = io('http://localhost:8005', {\n//         query: {\n//           userId: authUser._id\n//         },\n//         // transports: ['websocket'], // Optional, uncomment if needed\n//         // withCredentials: true // Optional, uncomment if needed\n//       });\n\n//       setSocket(socketInstance);\n\n//       // Listen for online users event\n//       socketInstance.on('getOnlineUsers', (onlineUsers) => {\n//         dispatch(setOnlineUsers(onlineUsers));\n//         console.log(\"onlineUsers\",onlineUsers)\n//       });\n\n//       // Handle socket connection\n//       socketInstance.on('connect', () => {\n//         console.log('Connected to server');\n//       });\n\n//       // Cleanup on component unmount\n//       return () => {\n//         socketInstance.disconnect();\n//       };\n//     }else{\n//       if(socket){\n//         socket.close()\n//         dispatch(setSocket(null))\n//       }\n//     }\n//   }, [authUser, dispatch]);\n\n//   return (\n//     <BrowserRouter>\n//       <div className='p-4 h-screen flex items-center justify-center'>\n//         <img src=\"/bg4.jpeg\" alt=\"Background\" className=\"background-image\" />\n//         <Routes>\n//           <Route path=\"/\" element={<Signup />} />\n//           <Route path=\"/login\" element={<Login />} />\n//           <Route path=\"/home\" element={<Home />} />\n//         </Routes>\n//       </div>\n//     </BrowserRouter>\n//   );\n// }\n\n// export default App;\n\nimport './App.css';\nimport './index.css';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport Signup from './Components/Signup';\nimport Login from './Components/Login';\nimport Home from './Components/Home';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { setOnlineUsers } from './redux/userSlice';\nimport { SocketProvider, useSocket } from './Contexts/SocketContext';\n\nfunction App() {\n  const { authUser } = useSelector(store => store.user);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const socket = useSocket();\n    if (authUser && socket) {\n      socket.on('getOnlineUsers', (onlineUsers) => {\n        dispatch(setOnlineUsers(onlineUsers));\n      });\n    }\n  }, [authUser, dispatch]);\n\n  return (\n    <SocketProvider authUser={authUser}>\n      <BrowserRouter>\n        <div className='p-4 h-screen flex items-center justify-center'>\n          <img src=\"/bg4.jpeg\" alt=\"Background\" className=\"background-image\" />\n          <Routes>\n            <Route path=\"/\" element={<Signup />} />\n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/home\" element={<Home />} />\n          </Routes>\n        </div>\n      </BrowserRouter>\n    </SocketProvider>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}