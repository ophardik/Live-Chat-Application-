{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hardik\\\\OneDrive\\\\Desktop\\\\LiveChatApplication\\\\frontend\\\\src\\\\Components\\\\SendInput.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { IoMdSend } from \"react-icons/io\";\n// import './SendInput.css';\n// import { useDispatch, useSelector } from 'react-redux';\n// import axios from 'axios';\n// import { setMessages } from '../redux/messageSlice';\n\n// const SendInput = () => {\n//   const [message, setMessage] = useState(\"\");\n//   const dispatch = useDispatch();\n//   const { selectedUser } = useSelector(store => store.user);\n//   const { messages } = useSelector(store => store.message);\n\n//   const onSubmitHandler = async (e) => {\n//     e.preventDefault();\n//     if (!selectedUser?._id) {\n//       console.log(\"No user selected\");\n//       return;\n//     }\n\n//     try {\n//       const response = await axios.post(\n//         `http://localhost:8002/message/sendMessage/${selectedUser._id}`,\n//         { message },\n//         {\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//           withCredentials: true,\n//         }\n//       );\n//      // console.log(\"Response after sending message\", response);\n//       dispatch(setMessages([...messages, response?.data?.newMessage]));\n//     } catch (error) {\n//       console.log(\"Error in SendInput component\", error);\n//     }\n//     setMessage(\"\");\n//   };\n\n//   return (\n//     <form onSubmit={onSubmitHandler} className='send-input-form'>\n//       <div className='input-container'>\n//         <input\n//           type='text'\n//           value={message}\n//           onChange={(e) => setMessage(e.target.value)}\n//           placeholder='Send a message...'\n//           className='input-field'\n//         />\n//         <button type=\"submit\" className='send-button'>\n//           <IoMdSend />\n//         </button>\n//       </div>\n//     </form>\n//   );\n// };\n\n// export default SendInput;\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useSocket } from '../Contexts/SocketContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SendInput = () => {\n  _s();\n  const socket = useSocket();\n  const [message, setMessage] = useState('');\n  const [receiverId, setReceiverId] = useState('');\n  const authUser = useSelector(state => state.user.authUser);\n  const handleSendMessage = () => {\n    if (socket && receiverId && message) {\n      socket.emit('sendMessage', {\n        receiverId,\n        message,\n        senderId: authUser._id // Optionally, send the sender's ID\n      });\n      setMessage(''); // Clear the message input\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: receiverId,\n      onChange: e => setReceiverId(e.target.value),\n      placeholder: \"Enter receiver ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      placeholder: \"Enter your message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendMessage,\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(SendInput, \"ng+eaPfH5kCxpeLS5VJA+qmqDko=\", false, function () {\n  return [useSocket, useSelector];\n});\n_c = SendInput;\nexport default SendInput;\nvar _c;\n$RefreshReg$(_c, \"SendInput\");","map":{"version":3,"names":["React","useState","useSelector","useSocket","jsxDEV","_jsxDEV","SendInput","_s","socket","message","setMessage","receiverId","setReceiverId","authUser","state","user","handleSendMessage","emit","senderId","_id","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hardik/OneDrive/Desktop/LiveChatApplication/frontend/src/Components/SendInput.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { IoMdSend } from \"react-icons/io\";\r\n// import './SendInput.css';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import axios from 'axios';\r\n// import { setMessages } from '../redux/messageSlice';\r\n\r\n// const SendInput = () => {\r\n//   const [message, setMessage] = useState(\"\");\r\n//   const dispatch = useDispatch();\r\n//   const { selectedUser } = useSelector(store => store.user);\r\n//   const { messages } = useSelector(store => store.message);\r\n\r\n//   const onSubmitHandler = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!selectedUser?._id) {\r\n//       console.log(\"No user selected\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const response = await axios.post(\r\n//         `http://localhost:8002/message/sendMessage/${selectedUser._id}`,\r\n//         { message },\r\n//         {\r\n//           headers: {\r\n//             'Content-Type': 'application/json',\r\n//           },\r\n//           withCredentials: true,\r\n//         }\r\n//       );\r\n//      // console.log(\"Response after sending message\", response);\r\n//       dispatch(setMessages([...messages, response?.data?.newMessage]));\r\n//     } catch (error) {\r\n//       console.log(\"Error in SendInput component\", error);\r\n//     }\r\n//     setMessage(\"\");\r\n//   };\r\n\r\n//   return (\r\n//     <form onSubmit={onSubmitHandler} className='send-input-form'>\r\n//       <div className='input-container'>\r\n//         <input\r\n//           type='text'\r\n//           value={message}\r\n//           onChange={(e) => setMessage(e.target.value)}\r\n//           placeholder='Send a message...'\r\n//           className='input-field'\r\n//         />\r\n//         <button type=\"submit\" className='send-button'>\r\n//           <IoMdSend />\r\n//         </button>\r\n//       </div>\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n// export default SendInput;\r\nimport React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useSocket } from '../Contexts/SocketContext';\r\n\r\nconst SendInput = () => {\r\n  const socket = useSocket();\r\n  const [message, setMessage] = useState('');\r\n  const [receiverId, setReceiverId] = useState('');\r\n  const authUser = useSelector((state) => state.user.authUser);\r\n\r\n  const handleSendMessage = () => {\r\n    if (socket && receiverId && message) {\r\n      socket.emit('sendMessage', {\r\n        receiverId,\r\n        message,\r\n        senderId: authUser._id, // Optionally, send the sender's ID\r\n      });\r\n      setMessage(''); // Clear the message input\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        value={receiverId}\r\n        onChange={(e) => setReceiverId(e.target.value)}\r\n        placeholder=\"Enter receiver ID\"\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        value={message}\r\n        onChange={(e) => setMessage(e.target.value)}\r\n        placeholder=\"Enter your message\"\r\n      />\r\n      <button onClick={handleSendMessage}>Send Message</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SendInput;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,SAAS,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,MAAM,GAAGL,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMY,QAAQ,GAAGX,WAAW,CAAEY,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACF,QAAQ,CAAC;EAE5D,MAAMG,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIR,MAAM,IAAIG,UAAU,IAAIF,OAAO,EAAE;MACnCD,MAAM,CAACS,IAAI,CAAC,aAAa,EAAE;QACzBN,UAAU;QACVF,OAAO;QACPS,QAAQ,EAAEL,QAAQ,CAACM,GAAG,CAAE;MAC1B,CAAC,CAAC;MACFT,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;IAClB;EACF,CAAC;EAED,oBACEL,OAAA;IAAAe,QAAA,gBACEf,OAAA;MACEgB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEX,UAAW;MAClBY,QAAQ,EAAGC,CAAC,IAAKZ,aAAa,CAACY,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC/CI,WAAW,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACFzB,OAAA;MACEgB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEb,OAAQ;MACfc,QAAQ,EAAGC,CAAC,IAAKd,UAAU,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC5CI,WAAW,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACFzB,OAAA;MAAQ0B,OAAO,EAAEf,iBAAkB;MAAAI,QAAA,EAAC;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV,CAAC;AAACvB,EAAA,CAlCID,SAAS;EAAA,QACEH,SAAS,EAGPD,WAAW;AAAA;AAAA8B,EAAA,GAJxB1B,SAAS;AAoCf,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}