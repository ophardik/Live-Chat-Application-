{"ast":null,"code":"// // import {createSlice} from '@reduxjs/toolkit'\n\n// // const messageSlice=createSlice({\n// //     name:\"message\",\n// //     initialState:{\n// //         message:null,\n// //     },\n// //     reducers:{\n// //         setMessages:(state,action)=>{\n// //             state.message=action.playload\n// //         }\n// //     }\n// // })\n// // export const{setMessages}=messageSlice.actions\n// // export default messageSlice.reducer\n\n// import { createSlice } from '@reduxjs/toolkit';\n\n// const messageSlice = createSlice({\n//   name: 'message',\n//   initialState: {\n//     messages: []\n//   },\n//   reducers: {\n//     setMessages: (state, action) => {\n//       state.messages = action.payload;\n//     }\n//   }\n// });\n\n// export const { setMessages } = messageSlice.actions;\n// export default messageSlice.reducer;\n\n// redux/messageSlice.js\nimport { createSlice } from '@reduxjs/toolkit';\nexport const messageSlice = createSlice({\n  name: 'message',\n  initialState: {\n    messages: []\n  },\n  reducers: {\n    setMessages: (state, action) => {\n      state.messages = action.payload;\n    },\n    addMessage: (state, action) => {\n      state.messages.push(action.payload);\n    }\n  }\n});\nexport const {\n  setMessages,\n  addMessage\n} = messageSlice.actions;\nexport default messageSlice.reducer;","map":{"version":3,"names":["createSlice","messageSlice","name","initialState","messages","reducers","setMessages","state","action","payload","addMessage","push","actions","reducer"],"sources":["C:/Users/hardik/OneDrive/Desktop/LiveChatApplication/frontend/src/redux/messageSlice.js"],"sourcesContent":["// // import {createSlice} from '@reduxjs/toolkit'\r\n\r\n// // const messageSlice=createSlice({\r\n// //     name:\"message\",\r\n// //     initialState:{\r\n// //         message:null,\r\n// //     },\r\n// //     reducers:{\r\n// //         setMessages:(state,action)=>{\r\n// //             state.message=action.playload\r\n// //         }\r\n// //     }\r\n// // })\r\n// // export const{setMessages}=messageSlice.actions\r\n// // export default messageSlice.reducer\r\n\r\n\r\n// import { createSlice } from '@reduxjs/toolkit';\r\n\r\n// const messageSlice = createSlice({\r\n//   name: 'message',\r\n//   initialState: {\r\n//     messages: []\r\n//   },\r\n//   reducers: {\r\n//     setMessages: (state, action) => {\r\n//       state.messages = action.payload;\r\n//     }\r\n//   }\r\n// });\r\n\r\n// export const { setMessages } = messageSlice.actions;\r\n// export default messageSlice.reducer;\r\n\r\n\r\n// redux/messageSlice.js\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const messageSlice = createSlice({\r\n  name: 'message',\r\n  initialState: {\r\n    messages: []\r\n  },\r\n  reducers: {\r\n    setMessages: (state, action) => {\r\n      state.messages = action.payload;\r\n    },\r\n    addMessage: (state, action) => {\r\n      state.messages.push(action.payload);\r\n    }\r\n  }\r\n});\r\n\r\nexport const { setMessages, addMessage } = messageSlice.actions;\r\n\r\nexport default messageSlice.reducer;\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,YAAY,GAAGD,WAAW,CAAC;EACtCE,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACZC,QAAQ,EAAE;EACZ,CAAC;EACDC,QAAQ,EAAE;IACRC,WAAW,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC9BD,KAAK,CAACH,QAAQ,GAAGI,MAAM,CAACC,OAAO;IACjC,CAAC;IACDC,UAAU,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACH,QAAQ,CAACO,IAAI,CAACH,MAAM,CAACC,OAAO,CAAC;IACrC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,WAAW;EAAEI;AAAW,CAAC,GAAGT,YAAY,CAACW,OAAO;AAE/D,eAAeX,YAAY,CAACY,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}