{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hardik\\\\OneDrive\\\\Desktop\\\\LiveChatApplication\\\\frontend\\\\src\\\\Contexts\\\\SocketContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import React, { createContext, useContext, useEffect, useState } from 'react';\n// import { io } from 'socket.io-client';\n\n// const SocketContext = createContext(null);\n\n// export const SocketProvider = ({ children, authUser }) => {\n//   const [socket, setSocket] = useState(null);\n\n//   useEffect(() => {\n//     if (authUser) {\n//       const newSocket = io('http://localhost:8005', {\n//         query: { userId: authUser._id },\n//       });\n//       setSocket(newSocket);\n\n//       newSocket.on('connect', () => {\n//         console.log('Connected to server');\n//       });\n\n//       newSocket.on('disconnect', () => {\n//         console.log('Disconnected from server');\n//       });\n\n//       return () => {\n//         newSocket.disconnect();\n//       };\n//     }\n//   }, [authUser]);\n\n//   return (\n//     <SocketContext.Provider value={socket}>\n//       {children}\n//     </SocketContext.Provider>\n//   );\n// };\n\n// export const useSocket = () => useContext(SocketContext);\n// Contexts/SocketContext.js\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nexport const useSocket = () => {\n  _s();\n  return useContext(SocketContext);\n};\n_s(useSocket, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const SocketProvider = ({\n  children\n}) => {\n  _s2();\n  const {\n    authUser\n  } = useSelector(store => store.user);\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    if (authUser) {\n      const newSocket = io('http://localhost:8005', {\n        query: {\n          userId: authUser._id\n        },\n        withCredentials: true\n      });\n      setSocket(newSocket);\n      return () => newSocket.close();\n    }\n  }, [authUser]);\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: socket,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s2(SocketProvider, \"Hcd8+VhWSeZaxMNeDfIdpeqjE1o=\", false, function () {\n  return [useSelector];\n});\n_c = SocketProvider;\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","io","useSelector","jsxDEV","_jsxDEV","SocketContext","useSocket","_s","SocketProvider","children","_s2","authUser","store","user","socket","setSocket","newSocket","query","userId","_id","withCredentials","close","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hardik/OneDrive/Desktop/LiveChatApplication/frontend/src/Contexts/SocketContext.js"],"sourcesContent":["// import React, { createContext, useContext, useEffect, useState } from 'react';\r\n// import { io } from 'socket.io-client';\r\n\r\n// const SocketContext = createContext(null);\r\n\r\n// export const SocketProvider = ({ children, authUser }) => {\r\n//   const [socket, setSocket] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     if (authUser) {\r\n//       const newSocket = io('http://localhost:8005', {\r\n//         query: { userId: authUser._id },\r\n//       });\r\n//       setSocket(newSocket);\r\n\r\n//       newSocket.on('connect', () => {\r\n//         console.log('Connected to server');\r\n//       });\r\n\r\n//       newSocket.on('disconnect', () => {\r\n//         console.log('Disconnected from server');\r\n//       });\r\n\r\n//       return () => {\r\n//         newSocket.disconnect();\r\n//       };\r\n//     }\r\n//   }, [authUser]);\r\n\r\n//   return (\r\n//     <SocketContext.Provider value={socket}>\r\n//       {children}\r\n//     </SocketContext.Provider>\r\n//   );\r\n// };\r\n\r\n// export const useSocket = () => useContext(SocketContext);\r\n// Contexts/SocketContext.js\r\nimport React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst SocketContext = createContext();\r\n\r\nexport const useSocket = () => useContext(SocketContext);\r\n\r\nexport const SocketProvider = ({ children }) => {\r\n  const { authUser } = useSelector(store => store.user);\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (authUser) {\r\n      const newSocket = io('http://localhost:8005', {\r\n        query: { userId: authUser._id },\r\n        withCredentials: true,\r\n      });\r\n      setSocket(newSocket);\r\n\r\n      return () => newSocket.close();\r\n    }\r\n  }, [authUser]);\r\n\r\n  return (\r\n    <SocketContext.Provider value={socket}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,SAASC,EAAE,QAAQ,kBAAkB;AACrC,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,aAAa,gBAAGR,aAAa,CAAC,CAAC;AAErC,OAAO,MAAMS,SAAS,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMT,UAAU,CAACO,aAAa,CAAC;AAAA;AAACE,EAAA,CAA5CD,SAAS;AAEtB,OAAO,MAAME,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC9C,MAAM;IAAEC;EAAS,CAAC,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC;EACrD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd,IAAIY,QAAQ,EAAE;MACZ,MAAMK,SAAS,GAAGf,EAAE,CAAC,uBAAuB,EAAE;QAC5CgB,KAAK,EAAE;UAAEC,MAAM,EAAEP,QAAQ,CAACQ;QAAI,CAAC;QAC/BC,eAAe,EAAE;MACnB,CAAC,CAAC;MACFL,SAAS,CAACC,SAAS,CAAC;MAEpB,OAAO,MAAMA,SAAS,CAACK,KAAK,CAAC,CAAC;IAChC;EACF,CAAC,EAAE,CAACV,QAAQ,CAAC,CAAC;EAEd,oBACEP,OAAA,CAACC,aAAa,CAACiB,QAAQ;IAACC,KAAK,EAAET,MAAO;IAAAL,QAAA,EACnCA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;AAACjB,GAAA,CArBWF,cAAc;EAAA,QACJN,WAAW;AAAA;AAAA0B,EAAA,GADrBpB,cAAc;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}